name: promote-prod-stargate-ui

on:
  push:
    # paths:
    #   - packages/**
    branches:
      - alpha

env:
  NPM_TOKEN: ${{ secrets.BOT_REGISTRY_TOKEN }}
  NPM_CONFIG_USERCONFIG: .npmrc

jobs:
  publish:
    if: |
      !contains(github.event.head_commit.author.name, 'james-pontte')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Authenticate with @james-pontte
        run: |
          git config --global user.name ${GIT_COMMITTER_NAME}
          git config --global user.email ${GIT_COMMITTER_EMAIL}
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
          GIT_COMMITTER_NAME: ${{ secrets.BOT_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.BOT_EMAIL }}

      - uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install dependencies
        run: yarn install --pure-lockfile

      - uses: actions/cache@v1
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-build-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-node-modules
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # - name: Generate coverage of packages
      #   run: |
      #     yarn package:playground coverage

      - name: Generate build
        run: yarn build
        env:
          NODE_ENV: 'production'

      - name: Promote under production version
        run: |
          npx lerna version --conventional-prerelease --create-release github -y
        env:
          GH_TOKEN: ${{ secrets.BOT_TOKEN }}

      - name: Publish
        run: |
          npx lerna publish from-package -y
        env:
          GH_TOKEN: ${{ secrets.BOT_TOKEN }}
